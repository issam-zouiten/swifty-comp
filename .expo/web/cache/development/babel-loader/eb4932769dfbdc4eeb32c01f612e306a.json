{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"startAngle\", \"endAngle\", \"radius\", \"offset\", \"direction\", \"strokeCap\", \"strokeWidth\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Path } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CIRCLE = Math.PI * 2;\n\nfunction makeArcPath(x, y, startAngleArg, endAngleArg, radius, direction) {\n  var startAngle = startAngleArg;\n  var endAngle = endAngleArg;\n\n  if (endAngle - startAngle >= CIRCLE) {\n    endAngle = CIRCLE + endAngle % CIRCLE;\n  } else {\n    endAngle = endAngle % CIRCLE;\n  }\n\n  startAngle = startAngle % CIRCLE;\n  var angle = startAngle > endAngle ? CIRCLE - startAngle + endAngle : endAngle - startAngle;\n\n  if (angle >= CIRCLE) {\n    return \"M\" + (x + radius) + \" \" + y + \"\\n            a\" + radius + \" \" + radius + \" 0 0 1 0 \" + radius * 2 + \"\\n            a\" + radius + \" \" + radius + \" 0 0 1 0 \" + radius * -2;\n  }\n\n  var directionFactor = direction === 'counter-clockwise' ? -1 : 1;\n  endAngle *= directionFactor;\n  startAngle *= directionFactor;\n  var startSine = Math.sin(startAngle);\n  var startCosine = Math.cos(startAngle);\n  var endSine = Math.sin(endAngle);\n  var endCosine = Math.cos(endAngle);\n  var arcFlag = angle > Math.PI ? 1 : 0;\n  var reverseFlag = direction === 'counter-clockwise' ? 0 : 1;\n  return \"M\" + (x + radius * (1 + startSine)) + \" \" + (y + radius - radius * startCosine) + \"\\n          A\" + radius + \" \" + radius + \" 0 \" + arcFlag + \" \" + reverseFlag + \" \" + (x + radius * (1 + endSine)) + \" \" + (y + radius - radius * endCosine);\n}\n\nvar Arc = function (_Component) {\n  _inherits(Arc, _Component);\n\n  var _super = _createSuper(Arc);\n\n  function Arc() {\n    _classCallCheck(this, Arc);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Arc, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          startAngle = _this$props.startAngle,\n          endAngle = _this$props.endAngle,\n          radius = _this$props.radius,\n          offset = _this$props.offset,\n          direction = _this$props.direction,\n          strokeCap = _this$props.strokeCap,\n          strokeWidth = _this$props.strokeWidth,\n          restProps = _objectWithoutProperties(_this$props, _excluded);\n\n      var path = makeArcPath((offset.left || 0) + strokeWidth / 2, (offset.top || 0) + strokeWidth / 2, startAngle, endAngle, radius - strokeWidth / 2, direction);\n      return _jsx(Path, _objectSpread({\n        d: path,\n        strokeLinecap: strokeCap,\n        strokeWidth: strokeWidth\n      }, restProps));\n    }\n  }]);\n\n  return Arc;\n}(Component);\n\nArc.propTypes = {\n  startAngle: PropTypes.number.isRequired,\n  endAngle: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  offset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }),\n  strokeCap: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  direction: PropTypes.oneOf(['clockwise', 'counter-clockwise'])\n};\nArc.defaultProps = {\n  startAngle: 0,\n  offset: {\n    top: 0,\n    left: 0\n  },\n  strokeCap: 'butt',\n  strokeWidth: 0,\n  direction: 'clockwise'\n};\nexport { Arc as default };","map":{"version":3,"sources":["/Users/pc/Desktop/swifty-comp/node_modules/react-native-progress/Shapes/Arc.js"],"names":["React","Component","PropTypes","Path","CIRCLE","Math","PI","makeArcPath","x","y","startAngleArg","endAngleArg","radius","direction","startAngle","endAngle","angle","directionFactor","startSine","sin","startCosine","cos","endSine","endCosine","arcFlag","reverseFlag","Arc","props","offset","strokeCap","strokeWidth","restProps","path","left","top","propTypes","number","isRequired","shape","string","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Path } from 'react-native-svg';\n\nconst CIRCLE = Math.PI * 2;\n\nfunction makeArcPath(x, y, startAngleArg, endAngleArg, radius, direction) {\n  let startAngle = startAngleArg;\n  let endAngle = endAngleArg;\n  if (endAngle - startAngle >= CIRCLE) {\n    endAngle = CIRCLE + (endAngle % CIRCLE);\n  } else {\n    endAngle = endAngle % CIRCLE;\n  }\n  startAngle = startAngle % CIRCLE;\n  const angle =\n    startAngle > endAngle\n      ? CIRCLE - startAngle + endAngle\n      : endAngle - startAngle;\n\n  if (angle >= CIRCLE) {\n    return `M${x + radius} ${y}\n            a${radius} ${radius} 0 0 1 0 ${radius * 2}\n            a${radius} ${radius} 0 0 1 0 ${radius * -2}`;\n  }\n\n  const directionFactor = direction === 'counter-clockwise' ? -1 : 1;\n  endAngle *= directionFactor;\n  startAngle *= directionFactor;\n  const startSine = Math.sin(startAngle);\n  const startCosine = Math.cos(startAngle);\n  const endSine = Math.sin(endAngle);\n  const endCosine = Math.cos(endAngle);\n\n  const arcFlag = angle > Math.PI ? 1 : 0;\n  const reverseFlag = direction === 'counter-clockwise' ? 0 : 1;\n\n  return `M${x + radius * (1 + startSine)} ${y + radius - radius * startCosine}\n          A${radius} ${radius} 0 ${arcFlag} ${reverseFlag} ${x +\n    radius * (1 + endSine)} ${y + radius - radius * endCosine}`;\n}\n\nexport default class Arc extends Component {\n  static propTypes = {\n    startAngle: PropTypes.number.isRequired, // in radians\n    endAngle: PropTypes.number.isRequired, // in radians\n    radius: PropTypes.number.isRequired,\n    offset: PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n    }),\n    strokeCap: PropTypes.string,\n    strokeWidth: PropTypes.number,\n    direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n  };\n\n  static defaultProps = {\n    startAngle: 0,\n    offset: { top: 0, left: 0 },\n    strokeCap: 'butt',\n    strokeWidth: 0,\n    direction: 'clockwise',\n  };\n\n  render() {\n    const {\n      startAngle,\n      endAngle,\n      radius,\n      offset,\n      direction,\n      strokeCap,\n      strokeWidth,\n      ...restProps\n    } = this.props;\n\n    const path = makeArcPath(\n      (offset.left || 0) + strokeWidth / 2,\n      (offset.top || 0) + strokeWidth / 2,\n      startAngle,\n      endAngle,\n      radius - strokeWidth / 2,\n      direction\n    );\n\n    return (\n      <Path\n        d={path}\n        strokeLinecap={strokeCap}\n        strokeWidth={strokeWidth}\n        {...restProps}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}