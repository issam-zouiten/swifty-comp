{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from 'axios';\nimport Home_image from \"../../assets/42_logo.png\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      login = _React$useState2[0],\n      onChangeLogin = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var image = {\n    uri: \"https://images.unsplash.com/photo-1530176928500-2372a88e00b5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MzV8fDNkJTIwYmFja2dyb3VuZCUyMHdoaXRlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=800&q=60\"\n  };\n\n  var getToken = function getToken() {\n    var response;\n    return _regeneratorRuntime.async(function getToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.intra.42.fr/oauth/token\", {\n              grant_type: \"client_credentials\",\n              client_id: \"160ec65318675dc7088c2c4b6139fbae91387ae8bcc71c363e0597676532bd70\",\n              client_secret: \"21e6dfeba0b0cf4d69bd9d7516a1fafc3df090f4ba5e0538f9c6b3e258363ab0\"\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.data) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log(response.data.access_token);\n            return _context.abrupt(\"return\", response.data.access_token);\n\n          case 9:\n            console.log(\"error\");\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"catch\");\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var sendData = function sendData(login, token) {\n    var response, coalition;\n    return _regeneratorRuntime.async(function sendData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.intra.42.fr/v2/users/\" + login.trim().toLowerCase(), {\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            console.log(response.data);\n\n            if (!response.data) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.intra.42.fr/v2/users/\" + response.data.id + \"/coalitions\", {\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            }));\n\n          case 8:\n            coalition = _context2.sent;\n\n          case 9:\n            _context2.next = 16;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0.message);\n            alert(\"login doesnt exist\");\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var getUser = function getUser(login) {\n    var token;\n    return _regeneratorRuntime.async(function getUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            login.trim();\n\n            if (!(login && login !== \"\")) {\n              _context3.next = 19;\n              break;\n            }\n\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(getToken());\n\n          case 6:\n            token = _context3.sent;\n            console.log(token);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(sendData(login, token));\n\n          case 10:\n            _context3.next = 17;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.log(_context3.t0);\n            alert(_context3.t0);\n            setLoading(false);\n\n          case 17:\n            _context3.next = 20;\n            break;\n\n          case 19:\n            alert(\"you should set a login first\");\n\n          case 20:\n            setLoading(false);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[3, 12]], Promise);\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    viewContainer: {\n      marginTop: -100,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    tinyLogo: {\n      width: 150,\n      height: 150,\n      maxWidth: 200,\n      maxHeight: 200,\n      marginLeft: -20\n    },\n    input: {\n      width: '80%',\n      margin: 12,\n      borderWidth: 1,\n      borderRadius: 5,\n      borderColor: \"#EA7523\",\n      backgroundColor: \"white\",\n      padding: 10\n    },\n    button: {\n      backgroundColor: \"#EA7523\",\n      width: '80%',\n      padding: 10,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5\n    },\n    text: {\n      fontWeight: 'bold',\n      color: 'white',\n      fontSize: 17\n    }\n  });\n  return _jsx(_Fragment, {\n    children: _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: image,\n        style: {\n          width: '100%',\n          height: '100%',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: styles.viewContainer,\n          children: [_jsx(Image, {\n            style: styles.tinyLogo,\n            source: Home_image,\n            resizeMode: \"cover\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: onChangeLogin,\n            value: login,\n            placeholder: \"Login\"\n          }), _jsx(Pressable, {\n            style: styles.button,\n            onPress: function onPress() {\n              return getUser(login);\n            },\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Search\"\n            })\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/Users/pc/Desktop/swifty-comp/components/Home/index.jsx"],"names":["React","axios","Home_image","AsyncStorage","Index","navigation","useState","login","onChangeLogin","loading","setLoading","image","uri","getToken","post","grant_type","client_id","client_secret","response","data","console","log","access_token","sendData","token","get","trim","toLowerCase","headers","Authorization","id","coalition","message","alert","getUser","styles","StyleSheet","create","container","flex","justifyContent","viewContainer","marginTop","alignItems","tinyLogo","width","height","maxWidth","maxHeight","marginLeft","input","margin","borderWidth","borderRadius","borderColor","backgroundColor","padding","button","text","fontWeight","color","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;AAEA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1C,wBAA+BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA/B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,aAAd;;AACA,yBAA8BR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcZ,KAAK,CAACa,IAAN,wCACnB;AACIC,cAAAA,UAAU,EAAE,oBADhB;AAEIC,cAAAA,SAAS,EAAE,kEAFf;AAGIC,cAAAA,aAAa,EAAE;AAHnB,aADmB,CAFd;;AAAA;AAEHC,YAAAA,QAFG;;AAAA,iBASLA,QAAQ,CAACC,IATJ;AAAA;AAAA;AAAA;;AAULC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,CAAcG,YAA1B;AAVK,6CAWGJ,QAAQ,CAACC,IAAT,CAAcG,YAXjB;;AAAA;AAcLF,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAdK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBTD,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAjBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAoBA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAOhB,KAAP,EAAciB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYvB,KAAK,CAACwB,GAAN,CACjB,sCAAuClB,KAAK,CAACmB,IAAN,EAAD,CAAeC,WAAf,EADrB,EAEjB;AACIC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,EAAE,YAAYL;AADtB;AADb,aAFiB,CAFZ;;AAAA;AAELN,YAAAA,QAFK;AAUTE,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;;AAVS,iBAWLD,QAAQ,CAACC,IAXJ;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAYiBlB,KAAK,CAACwB,GAAN,CAClB,sCAAsCP,QAAQ,CAACC,IAAT,CAAcW,EAApD,GAAyD,aADvC,EAElB;AACIF,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,EAAE,YAAYL;AADtB;AADb,aAFkB,CAZjB;;AAAA;AAYDO,YAAAA,SAZC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0BTX,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAMW,OAAlB;AACAC,YAAAA,KAAK,CAAC,oBAAD,CAAL;AACAvB,YAAAA,UAAU,CAAC,KAAD,CAAV;;AA5BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAgCA,MAAMwB,OAAO,GAAG,SAAVA,OAAU,CAAO3B,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZG,YAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,YAAAA,KAAK,CAACmB,IAAN;;AAFY,kBAGRnB,KAAK,IAAIA,KAAK,KAAK,EAHX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAiBoBM,QAAQ,EAjB5B;;AAAA;AAiBMW,YAAAA,KAjBN;AAkBAJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAlBA;AAAA,6CAsBED,QAAQ,CAAChB,KAAD,EAAQiB,KAAR,CAtBV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBJJ,YAAAA,OAAO,CAACC,GAAR;AACAY,YAAAA,KAAK,cAAL;AACAvB,YAAAA,UAAU,CAAC,KAAD,CAAV;;AA3BI;AAAA;AAAA;;AAAA;AAgCRuB,YAAAA,KAAK,CAAC,8BAAD,CAAL;;AAhCQ;AAiCZvB,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAjCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAqCA,MAAMyB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,cAAc,EAAE;AAFT,KADkB;AAK7BC,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE,CAAC,GADD;AAEXC,MAAAA,UAAU,EAAE,QAFD;AAGXH,MAAAA,cAAc,EAAE;AAHL,KALc;AAU7BI,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,MAAM,EAAE,GAFF;AAGNC,MAAAA,QAAQ,EAAE,GAHJ;AAINC,MAAAA,SAAS,EAAE,GAJL;AAKNC,MAAAA,UAAU,EAAE,CAAC;AALP,KAVmB;AAiB7BC,IAAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAE,KADJ;AAEHM,MAAAA,MAAM,EAAE,EAFL;AAGHC,MAAAA,WAAW,EAAE,CAHV;AAIHC,MAAAA,YAAY,EAAE,CAJX;AAKHC,MAAAA,WAAW,EAAE,SALV;AAMHC,MAAAA,eAAe,EAAE,OANd;AAOHC,MAAAA,OAAO,EAAE;AAPN,KAjBsB;AA0B7BC,IAAAA,MAAM,EAAE;AACJF,MAAAA,eAAe,EAAE,SADb;AAEJV,MAAAA,KAAK,EAAE,KAFH;AAGJW,MAAAA,OAAO,EAAE,EAHL;AAIJb,MAAAA,UAAU,EAAE,QAJR;AAKJH,MAAAA,cAAc,EAAE,QALZ;AAMJa,MAAAA,YAAY,EAAE;AANV,KA1BqB;AAkC7BK,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,MADV;AAEFC,MAAAA,KAAK,EAAE,OAFL;AAGFC,MAAAA,QAAQ,EAAE;AAHR;AAlCuB,GAAlB,CAAf;AA2CA,SACI;AAAA,cACI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAE1B,MAAM,CAACG,SAA5B;AAAA,gBACI,KAAC,eAAD;AAAiB,QAAA,MAAM,EAAE3B,KAAzB;AAAgC,QAAA,KAAK,EAAE;AACnCkC,UAAAA,KAAK,EAAE,MAD4B;AACpBC,UAAAA,MAAM,EAAE,MADY;AACJN,UAAAA,cAAc,EAAE,QADZ;AAEnCG,UAAAA,UAAU,EAAE;AAFuB,SAAvC;AAAA,kBAKI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACM,aAApB;AAAA,qBACI,KAAC,KAAD;AAAO,YAAA,KAAK,EAAEN,MAAM,CAACS,QAArB;AAA+B,YAAA,MAAM,EAAE1C,UAAvC;AAAmD,YAAA,UAAU,EAAC;AAA9D,YADJ,EAEI,KAAC,SAAD;AACI,YAAA,KAAK,EAAEiC,MAAM,CAACe,KADlB;AAEI,YAAA,YAAY,EAAE1C,aAFlB;AAGI,YAAA,KAAK,EAAED,KAHX;AAII,YAAA,WAAW,EAAC;AAJhB,YAFJ,EAQI,KAAC,SAAD;AACI,YAAA,KAAK,EAAE4B,MAAM,CAACsB,MADlB;AAEI,YAAA,OAAO,EAAE;AAAA,qBAAMvB,OAAO,CAAC3B,KAAD,CAAb;AAAA,aAFb;AAAA,sBAII,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE4B,MAAM,CAACuB,IAApB;AAAA;AAAA;AAJJ,YARJ;AAAA;AALJ;AADJ;AADJ,IADJ;AA4BH","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Pressable, TextInput, ImageBackground, SafeAreaView, Image, ActivityIndicator } from 'react-native';\nimport axios from 'axios';\nimport Home_image from '../../assets/42_logo.png';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport default function Index({ navigation }) {\n    const [login, onChangeLogin] = React.useState(\"\");\n    const [loading, setLoading] = React.useState(false);\n\n    const image = { uri: \"https://images.unsplash.com/photo-1530176928500-2372a88e00b5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MzV8fDNkJTIwYmFja2dyb3VuZCUyMHdoaXRlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=800&q=60\" };\n    const getToken = async () => {\n        try {\n            const response = await axios.post(`https://api.intra.42.fr/oauth/token`,\n                {\n                    grant_type: \"client_credentials\",\n                    client_id: \"160ec65318675dc7088c2c4b6139fbae91387ae8bcc71c363e0597676532bd70\",\n                    client_secret: \"21e6dfeba0b0cf4d69bd9d7516a1fafc3df090f4ba5e0538f9c6b3e258363ab0\",\n                }\n            )\n            if (response.data) {\n                console.log(response.data.access_token)\n                return (response.data.access_token)\n            }\n            else {\n                console.log(\"error\");\n            }\n        } catch (error) {\n            console.log(\"catch\");\n        }\n    }\n    const sendData = async (login, token) => {\n        try {\n            var response = await axios.get(\n                \"https://api.intra.42.fr/v2/users/\" + (login.trim()).toLowerCase(),\n                {\n                    headers: {\n                        Authorization: \"Bearer \" + token,\n                    },\n                }\n            );\n            console.log(response.data)\n            if (response.data) {\n                var coalition = await axios.get(\n                    \"https://api.intra.42.fr/v2/users/\" + response.data.id + \"/coalitions\",\n                    {\n                        headers: {\n                            Authorization: \"Bearer \" + token,\n                        },\n                    }\n                )\n                // if (coalition.data) {\n                //     setLoading(false);\n                //     navigation.navigate(\"Details\", { data: response.data, coalition: coalition.data });\n                // }\n            }\n        } catch (error) {\n            console.log(error.message);\n            alert(\"login doesnt exist\");\n            setLoading(false)\n        }\n    };\n\n    const getUser = async (login) => {\n        setLoading(true);\n        login.trim();\n        if (login && login !== \"\") {\n            try {\n                // var token = await AsyncStorage.getItem(\"access_token\");\n                // if (token) {\n\n                //     token = JSON.parse(token);\n                //     if ((token.created_at + token.expires_in) <= (Date.now() / 1000)) {\n                //         console.log(\"token expired\");\n                //         token = await getToken();\n                //         if (token)\n                //             await AsyncStorage.setItem(\"access_token\", JSON.stringify(token));\n                //     }\n                // }\n                // else {\n                    const token = await getToken();\n                    console.log(token)\n                //     if (token)\n                //         await AsyncStorage.setItem(\"access_token\", JSON.stringify(token));\n                // }\n                await sendData(login, token);\n            }\n            catch (error) {\n                console.log(error);\n                alert(error);\n                setLoading(false);\n            }\n\n        }\n        else\n            alert(\"you should set a login first\");\n        setLoading(false)\n\n    }\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n            justifyContent: 'center',\n        },\n        viewContainer: {\n            marginTop: -100,\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        tinyLogo: {\n            width: 150,\n            height: 150,\n            maxWidth: 200,\n            maxHeight: 200,\n            marginLeft: -20,\n        },\n        input: {\n            width: '80%',\n            margin: 12,\n            borderWidth: 1,\n            borderRadius: 5,\n            borderColor: \"#EA7523\",\n            backgroundColor: \"white\",\n            padding: 10,\n        },\n        button: {\n            backgroundColor: \"#EA7523\",\n            width: '80%',\n            padding: 10,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 5,\n        },\n        text: {\n            fontWeight: 'bold',\n            color: 'white',\n            fontSize: 17,\n    \n        },\n\n    });\n\n    return (\n        <>\n            <SafeAreaView style={styles.container}>\n                <ImageBackground source={image} style={{\n                    width: '100%', height: '100%', justifyContent: 'center',\n                    alignItems: 'center',\n                }}>\n                   {/* {!loading ? */}\n                    <View style={styles.viewContainer}>\n                        <Image style={styles.tinyLogo} source={Home_image} resizeMode=\"cover\" />\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={onChangeLogin}\n                            value={login}\n                            placeholder=\"Login\"\n                        />\n                        <Pressable\n                            style={styles.button}\n                            onPress={() => getUser(login)}\n                        >\n                            <Text style={styles.text}>Search</Text>\n                        </Pressable>\n                    </View>\n                    {/* : <ActivityIndicator size=\"large\" color=\"#00b0b2\" />} */}\n                </ImageBackground>\n            </SafeAreaView>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}