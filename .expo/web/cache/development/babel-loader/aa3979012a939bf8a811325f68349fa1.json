{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport HomeScreen from \"../Home\";\nimport ProfileScreen from \"./profile\";\nimport ProjectsScreen from \"./projects\";\nimport AchievementsScreen from \"./achievements\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nexport default function Index(_ref) {\n  var route = _ref.route;\n  var userData = route.params.userData;\n  console.log(userData);\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Profile\",\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          elevation: 0,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10,\n          height: 70\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Projects') {\n            iconName = focused ? 'briefcase' : 'briefcase-outline';\n          } else if (route.name === 'Achievements') {\n            iconName = focused ? 'wallet' : 'wallet-outline';\n          } else if (route.name === 'Home') {\n            iconName = focused ? 'search' : 'search-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 25,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'orange',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      },\n      initialParams: {\n        userData: userData\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      },\n      initialParams: {\n        userData: userData\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Projects\",\n      component: ProjectsScreen,\n      options: {\n        headerShown: false\n      },\n      initialParams: {\n        userData: userData\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Achievements\",\n      component: AchievementsScreen,\n      options: {\n        headerShown: false\n      },\n      initialParams: {\n        userData: userData\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10\n  },\n  Button: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80vw'\n  }\n});","map":{"version":3,"sources":["/Users/pc/Desktop/swifty-comp/components/Infos/index.jsx"],"names":["React","createMaterialTopTabNavigator","HomeScreen","ProfileScreen","ProjectsScreen","AchievementsScreen","Ionicons","Tab","Index","route","userData","params","console","log","tabBarShowLabel","tabBarStyle","elevation","borderBottomLeftRadius","borderBottomRightRadius","height","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","styles","StyleSheet","create","container","flex","alignItems","padding","Button","backgroundColor","justifyContent","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport HomeScreen from '../Home';\nimport ProfileScreen from './profile';\nimport ProjectsScreen from './projects';\nimport AchievementsScreen from './achievements';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createMaterialTopTabNavigator();\n\n\nexport default function Index({ route }) {\n    const { userData } = route.params;\n    console.log(userData)\n    return (\n        <Tab.Navigator\n            initialRouteName=\"Profile\"\n            screenOptions={({ route }) => ({\n                tabBarShowLabel: false,\n                tabBarStyle: {\n                    elevation: 0,\n                    borderBottomLeftRadius: 10,\n                    borderBottomRightRadius: 10,\n                    height: 70,\n                },\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n                    if (route.name === 'Profile') {\n                        iconName = focused ? 'person' : 'person-outline';\n                    } else if (route.name === 'Projects') {\n                        iconName = focused ? 'briefcase' : 'briefcase-outline';\n                    } else if (route.name === 'Achievements') {\n                        iconName = focused ? 'wallet' : 'wallet-outline';\n                    } else if (route.name === 'Home') {\n                        iconName = focused ? 'search' : 'search-outline';\n                    }\n\n                    // You can return any component that you like here!\n                    return <Ionicons name={iconName} size={25} color={color} />;\n                },\n                tabBarActiveTintColor: 'orange',\n                tabBarInactiveTintColor: 'gray',\n            })\n            }\n        >\n            <Tab.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} initialParams={{ userData: userData }} />\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{ headerShown: false }} initialParams={{ userData: userData }} />\n            <Tab.Screen name=\"Projects\" component={ProjectsScreen} options={{ headerShown: false }} initialParams={{ userData: userData }} />\n            <Tab.Screen name=\"Achievements\" component={AchievementsScreen} options={{ headerShown: false }} initialParams={{ userData: userData }} />\n        </Tab.Navigator>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        // justifyContent: 'center',\n        padding: 10,\n    },\n \n    Button: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80vw'\n    },\n});"]},"metadata":{},"sourceType":"module"}